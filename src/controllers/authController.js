import UserService from '../services/userServices.js';

class AuthController {
    static async login(req, res) {
        try {
            const { login, password } = req.body;
            
            console.log('üîê Login attempt for:', login);
            
            // –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Content-Type –î–û –ª—é–±–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            res.setHeader('Content-Type', 'application/json');
            
            if (!login || !password) {
                return res.status(400).json({
                    success: false,
                    message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è'
                });
            }

            const authResult = await UserService.authenticate(login, password);
            
            if (!authResult.success) {
                return res.status(401).json({
                    success: false,
                    message: authResult.message || '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏'
                });
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–∫–∏
            const cookieOptions = {
                httpOnly: true,
                maxAge: 24 * 60 * 60 * 1000,
                secure: process.env.NODE_ENV === 'production',
                sameSite: 'lax'
            };

            res.cookie('user_id', authResult.user.user_id, cookieOptions);
            res.cookie('user_email', authResult.user.email, cookieOptions);
            res.cookie('user_fullname', authResult.user.fullname, cookieOptions);

            // ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø - –í–°–ï–ì–î–ê –≤–æ–∑–≤—Ä–∞—â–∞–µ–º JSON
            console.log('‚úÖ Sending JSON response for user:', authResult.user.user_id);
            
            return res.json({
                success: true,
                message: '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ',
                redirect_url: `/account?user_id=${authResult.user.user_id}`,
                user: {
                    id: authResult.user.user_id,
                    email: authResult.user.email,
                    name: authResult.user.fullname
                }
            });

        } catch (error) {
            console.error('‚ùå Login error:', error);
            
            // –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Content-Type –¥–ª—è –æ—à–∏–±–æ–∫ —Ç–æ–∂–µ
            res.setHeader('Content-Type', 'application/json');
            
            return res.status(500).json({
                success: false,
                message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
            });
        }
    }
}

export default AuthController;